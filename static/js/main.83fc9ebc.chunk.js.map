{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","goods","sortedGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","getReversedGoods","showResetButton","sortedAlphabetically","sortedByLength","reversed","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KA0BMC,EAxBmB,SAACA,GACxB,IAAMC,EAAW,YAAOD,GAoBxB,OAlBAC,EAAYC,MAAK,SAACC,EAAGC,GACnB,OAAQR,GACN,KAAKL,EAASc,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKb,EAASgB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,KAAKjB,EAASI,KACd,QACE,OAAO,MAITG,GACFG,EAAYQ,UAGPR,EAGKS,CAAiBlB,GAEzBmB,EAAkBf,IAAaL,EAASI,MAAQG,EAEhDc,EAAuBhB,IAAaL,EAASc,SAC/C,GACA,WAEEQ,EAAiBjB,IAAaL,EAASgB,OACzC,GACA,WAEEO,EAAWhB,EACb,GACA,WAEJ,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBH,GAC7BK,QAAS,kBAAMpB,EAAYN,EAASc,WAHtC,iCAQA,wBACEW,KAAK,SACLD,UAAS,4BAAuBF,GAChCI,QAAS,kBAAMpB,EAAYN,EAASgB,SAHtC,4BAQA,wBACES,KAAK,SACLD,UAAS,4BAAuBD,GAChCG,QAAS,kBAAMlB,GAAeD,IAHhC,qBAQCa,GACC,wBACEK,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPpB,EAAYN,EAASI,MACrBI,GAAc,IALlB,sBAaJ,6BACE,6BACGC,EAAMkB,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cC5GrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.83fc9ebc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const getReversedGoods = (goods: string[]) => {\n    const sortedGoods = [...goods];\n\n    sortedGoods.sort((a, b): number => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return a.localeCompare(b);\n\n        case SortType.LENGTH:\n          return a.length - b.length;\n\n        case SortType.NONE:\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      sortedGoods.reverse();\n    }\n\n    return sortedGoods;\n  };\n\n  const goods = getReversedGoods(goodsFromServer);\n\n  const showResetButton = sortType !== SortType.NONE || isReversed;\n\n  const sortedAlphabetically = sortType === SortType.ALPHABET\n    ? ''\n    : 'is-light';\n\n  const sortedByLength = sortType === SortType.LENGTH\n    ? ''\n    : 'is-light';\n\n  const reversed = isReversed\n    ? ''\n    : 'is-light';\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortedAlphabetically}`}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortedByLength}`}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${reversed}`}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {showResetButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortType(SortType.NONE);\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}